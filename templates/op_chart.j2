{% extends 'base.j2' %}

{% block content %}
<div class="container pt-3 pb-3">

    <!-- Chart -->
    <canvas id="chart"></canvas>

    <!-- Display range selector -->
    <div class="mt-3">
        <select id="displayRangeSelector" class="w-25 form-select">
        </select>
    </div>

    <script>
        $(document).ready(function () {
           const context = document.getElementById('chart').getContext('2d');
            const chart = new Chart(context, {
                type: 'line',
                data: {
                    datasets: [
                        {% for entry in entries %}
                        {
                            label: "{{ entry['group'].type }} " + moment.utc("{{ entry['group'].created_at }}").local().format('L LT'),
                            data: [
                                {% for screenshot in entry['screenshots'] %}
                                {
                                    x: moment.utc("{{ screenshot.when }}").toDate(),
                                    y: {{ screenshot.op_count }},
                                },
                                {% endfor %}
                            ],
                            fill: true,
                            tension: 0.1,
                            backgroundColor: "{{ 'rgba(0, 255, 0, 0.3)' if entry['group'].processed_at else 'rgba(255, 0, 0, 0.3)' }}",
                            borderColor: 'darkgray',
                        },
                        {% endfor %}
                    ]
                },
                options: {
                    plugins: {
                        legend: {
                            display: true,
                            labels: {
                                boxWidth: 10,
                                boxHeight: 10,
                            }
                        },
                    },
                    scales: {
                        y: {
                            type: 'linear',
                            beginAtZero: true,
                            ticks: {
                                stepSize: 1,
                            },
                        },
                    }
                }
            });

            const displayRanges = [
                { amount: 30, unit: 'minutes', format: 'LT', label: 'Last 30 minutes', },
                { amount: 1, unit: 'hours', format: 'LT', label: 'Last hour', },
                { amount: 2, unit: 'hours', format: 'LT', label: 'Last 2 hours', },
            ];

            $displayRangeSelector = $("#displayRangeSelector");

            for (let displayRange of displayRanges) {
                $displayRangeSelector.append(
                    $("<option></option>")
                        .text(displayRange.label)
                );
            }

            function setDisplayRange(displayRange) {
                chart.options.scales.x = {
                    type: 'time',
                    time: {
                        unit: 'minute',
                        displayFormats: {
                            minute: displayRange.format,
                        },
                    },
                    min: moment().subtract(displayRange.amount, displayRange.unit),
                    max: moment(),
                };
                chart.update();
            }

            $displayRangeSelector.on('change', function () {
                setDisplayRange(displayRanges[this.selectedIndex]);
            });

            setDisplayRange(displayRanges[0]);
        });
    </script>

</div>
{% endblock %}
